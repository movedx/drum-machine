{"version":3,"sources":["samples/Roland TR 909/Bass Drum/bt0a0da.wav","samples/Roland TR 909/Snare/st0t0s0.wav","samples/Roland TR 909/Closed Hihat/hhcd0.wav","samples/Roland TR 909/Hand Clap/handclp1.wav","samples/Roland TR 909/Low Tom/lt0d0.wav","samples/Roland TR 909/Open Hihat/hhod0.wav","samples/Roland TR 909/Crash/cshd0.wav","samples/Roland TR 909/Mid Tom/mt0d0.wav","samples/Roland TR 909/Ride/rided0.wav","redux/features/machineSlice.js","components/Knob.js","components/Display.js","components/FaderComponents.js","components/Fader.js","components/Pad.js","components/ButtonRound.js","banks.js","components/DrumMachine.js","App.js","serviceWorker.js","redux/configureStore.js","index.js"],"names":["module","exports","machineSlice","createSlice","name","initialState","volumeZ","volumeX","volumeC","volumeA","volumeS","volumeD","volumeQ","volumeW","volumeE","bank","power","volume","displayText","reducers","setVolume","state","action","payload","id","charAt","length","toUpperCase","toString","setDisplayText","actions","selectDisplayText","machine","Knob","props","useState","value","setValue","dispatch","useDispatch","className","diameter","min","max","step","theme","donutColor","onValueChange","val","handleChange","ariaLabelledBy","Display","text","useSelector","railOuterStyle","position","width","height","transform","borderRadius","cursor","railInnerStyle","pointerEvents","backgroundColor","SliderRail","getRailProps","style","Handle","domain","handle","percent","disabled","getHandleProps","left","WebkitTapHighlightColor","zIndex","role","aria-valuemin","aria-valuemax","aria-valuenow","boxShadow","Track","source","target","getTrackProps","defaultProps","sliderStyle","touchAction","defaultValues","Fader","slice","values","setValues","setUpdate","mode","rootStyle","onUpdate","update","onChange","handles","map","key","right","tracks","Pad","selectVolume","player","sample","useEffect","window","addEventListener","handleKeyDown","removeEventListener","play","a","Tone","console","log","start","event","onClick","ButtonRound","banks","b1","q","b1qSample","w","b1wSample","e","b1eSample","b1aSample","s","b1sSample","d","b1dSample","z","b1zSample","x","b1xSample","c","b1cSample","b2","b3","b4","DrumMachine","sampleZ","toDestination","sampleX","sampleC","sampleA","sampleS","sampleD","sampleQ","sampleW","sampleE","Array","fill","el","uuid","App","Boolean","location","hostname","match","configureStore","reducer","machineReducer","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b9b5514e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bt0a0da.aebf1159.wav\";","module.exports = __webpack_public_path__ + \"static/media/st0t0s0.3ce30e88.wav\";","module.exports = __webpack_public_path__ + \"static/media/hhcd0.be306346.wav\";","module.exports = __webpack_public_path__ + \"static/media/handclp1.ce5193f6.wav\";","module.exports = __webpack_public_path__ + \"static/media/lt0d0.92968b71.wav\";","module.exports = __webpack_public_path__ + \"static/media/hhod0.67b2afb3.wav\";","module.exports = __webpack_public_path__ + \"static/media/cshd0.b3074059.wav\";","module.exports = __webpack_public_path__ + \"static/media/mt0d0.e7bd7821.wav\";","module.exports = __webpack_public_path__ + \"static/media/rided0.5e2d1e4b.wav\";","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const machineSlice = createSlice({\r\n  name: \"machine\",\r\n  initialState: {\r\n    volumeZ: 75,\r\n    volumeX: 75,\r\n    volumeC: 75,\r\n    volumeA: 75,\r\n    volumeS: 75,\r\n    volumeD: 75,\r\n    volumeQ: 75,\r\n    volumeW: 75,\r\n    volumeE: 75,\r\n    bank: \"b1\",\r\n    power: 1,\r\n    volume: 75,\r\n    displayText: \"\",\r\n  },\r\n  reducers: {\r\n    setVolume: (state, action) => {\r\n      const { id, volume } = action.payload;\r\n      if (id) {\r\n        state[\"volume\" + id.charAt(id.length - 1).toUpperCase()] = volume;\r\n        state.displayText = id.toString() + \": \" + volume;\r\n      } else {\r\n        state.volume = volume;\r\n        state.displayText = \"Master: \" + volume;\r\n      }\r\n    },\r\n    setDisplayText: (state, action) => {\r\n      state.displayText = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setVolume, setDisplayText } = machineSlice.actions;\r\n\r\nexport const selectVolume = (state, id) =>\r\n  (1 - state.machine[\"volume\" + id.toUpperCase()] / 100) *\r\n  80 *\r\n  -1 *\r\n  (1 - state.machine.volume / 100);\r\n\r\nexport const selectDisplayText = (state) => state.machine.displayText;\r\n\r\nexport default machineSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { Donut } from \"react-dial-knob\";\r\nimport \"../tailwind.output.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setVolume } from \"../redux/features/machineSlice\";\r\n\r\nconst Knob = (props) => {\r\n  const [value, setValue] = useState(75);\r\n  const dispatch = useDispatch();\r\n  const handleChange = (val) => {\r\n    setValue(val);\r\n    dispatch(setVolume({ id: props.id[1], volume: val }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"border border-solid border-1 rounded-full w-8 h-8\">\r\n      <Donut\r\n        diameter={32}\r\n        min={0}\r\n        max={100}\r\n        step={1}\r\n        value={value}\r\n        theme={{\r\n          donutColor: \"gray\",\r\n        }}\r\n        onValueChange={(val) => handleChange(val)}\r\n        ariaLabelledBy={\"my-label\"}\r\n      ></Donut>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Knob;\r\n","import React from \"react\";\r\nimport \"../tailwind.output.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectDisplayText } from \"../redux/features/machineSlice\";\r\n\r\nconst Display = () => {\r\n  const text = useSelector(selectDisplayText);\r\n  return (\r\n    <div className=\"border border-solid w-7/8 h-8 mb-8 align-middle text-center\">\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// *******************************************************\r\n// RAIL\r\n// *******************************************************\r\nconst railOuterStyle = {\r\n  position: \"absolute\",\r\n  width: \"100%\",\r\n  height: 42,\r\n  transform: \"translate(0%, -50%)\",\r\n  borderRadius: 7,\r\n  cursor: \"pointer\",\r\n  // border: '1px solid white',\r\n};\r\n\r\nconst railInnerStyle = {\r\n  position: \"absolute\",\r\n  width: \"100%\",\r\n  height: 14,\r\n  transform: \"translate(0%, -50%)\",\r\n  borderRadius: 7,\r\n  pointerEvents: \"none\",\r\n  backgroundColor: \"rgb(155,155,155)\",\r\n};\r\n\r\nexport function SliderRail({ getRailProps }) {\r\n  return (\r\n    <Fragment>\r\n      <div style={railOuterStyle} {...getRailProps()} />\r\n      <div style={railInnerStyle} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nSliderRail.propTypes = {\r\n  getRailProps: PropTypes.func.isRequired,\r\n};\r\n\r\n// *******************************************************\r\n// HANDLE COMPONENT\r\n// *******************************************************\r\nexport function Handle({\r\n  domain: [min, max],\r\n  handle: { id, value, percent },\r\n  disabled,\r\n  getHandleProps,\r\n}) {\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: \"absolute\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\r\n          zIndex: 5,\r\n          width: 28,\r\n          height: 42,\r\n          cursor: \"pointer\",\r\n          // border: '1px solid white',\r\n          backgroundColor: \"none\",\r\n        }}\r\n        {...getHandleProps(id)}\r\n      />\r\n      <div\r\n        role=\"slider\"\r\n        aria-valuemin={min}\r\n        aria-valuemax={max}\r\n        aria-valuenow={value}\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: \"absolute\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          zIndex: 2,\r\n          width: 24,\r\n          height: 24,\r\n          borderRadius: \"50%\",\r\n          boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.3)\",\r\n          backgroundColor: disabled ? \"#666\" : \"#ffc400\",\r\n        }}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nHandle.propTypes = {\r\n  domain: PropTypes.array.isRequired,\r\n  handle: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    percent: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  getHandleProps: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nHandle.defaultProps = {\r\n  disabled: false,\r\n};\r\n\r\n// *******************************************************\r\n// KEYBOARD HANDLE COMPONENT\r\n// Uses a button to allow keyboard events\r\n// *******************************************************\r\nexport function KeyboardHandle({\r\n  domain: [min, max],\r\n  handle: { id, value, percent },\r\n  disabled,\r\n  getHandleProps,\r\n}) {\r\n  return (\r\n    <button\r\n      role=\"slider\"\r\n      aria-valuemin={min}\r\n      aria-valuemax={max}\r\n      aria-valuenow={value}\r\n      style={{\r\n        left: `${percent}%`,\r\n        position: \"absolute\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        zIndex: 2,\r\n        width: 24,\r\n        height: 24,\r\n        borderRadius: \"50%\",\r\n        boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.3)\",\r\n        backgroundColor: disabled ? \"#666\" : \"#ffc400\",\r\n      }}\r\n      {...getHandleProps(id)}\r\n    />\r\n  );\r\n}\r\n\r\nKeyboardHandle.propTypes = {\r\n  domain: PropTypes.array.isRequired,\r\n  handle: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    percent: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  getHandleProps: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nKeyboardHandle.defaultProps = {\r\n  disabled: false,\r\n};\r\n\r\n// *******************************************************\r\n// TRACK COMPONENT\r\n// *******************************************************\r\nexport function Track({ source, target, getTrackProps, disabled }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        transform: \"translate(0%, -50%)\",\r\n        height: 14,\r\n        zIndex: 1,\r\n        backgroundColor: disabled ? \"#999\" : \"#b28900\",\r\n        borderRadius: 7,\r\n        cursor: \"pointer\",\r\n        left: `${source.percent}%`,\r\n        width: `${target.percent - source.percent}%`,\r\n      }}\r\n      {...getTrackProps()}\r\n    />\r\n  );\r\n}\r\n\r\nTrack.propTypes = {\r\n  source: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    percent: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  target: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    percent: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  getTrackProps: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nTrack.defaultProps = {\r\n  disabled: false,\r\n};\r\n\r\n// *******************************************************\r\n// TICK COMPONENT\r\n// *******************************************************\r\nexport function Tick({ tick, count, format }) {\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          marginTop: 14,\r\n          width: 1,\r\n          height: 5,\r\n          backgroundColor: \"rgb(200,200,200)\",\r\n          left: `${tick.percent}%`,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          marginTop: 22,\r\n          fontSize: 10,\r\n          textAlign: \"center\",\r\n          marginLeft: `${-(100 / count) / 2}%`,\r\n          width: `${100 / count}%`,\r\n          left: `${tick.percent}%`,\r\n        }}\r\n      >\r\n        {format(tick.value)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTick.propTypes = {\r\n  tick: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    percent: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  format: PropTypes.func.isRequired,\r\n};\r\n\r\nTick.defaultProps = {\r\n  format: (d) => d,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Slider, Rail, Handles, Tracks } from \"react-compound-slider\";\r\nimport { SliderRail, Handle, Track } from \"./FaderComponents\";\r\nimport { setDisplayText, setVolume } from \"../redux/features/machineSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"../tailwind.output.css\";\r\n\r\nconst sliderStyle = {\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n  touchAction: \"none\",\r\n};\r\n\r\nconst domain = [0, 100];\r\nconst defaultValues = [100];\r\n\r\nconst Fader = (props) => {\r\n  const [values, setValues] = useState(defaultValues.slice());\r\n  const [update, setUpdate] = useState(defaultValues.slice());\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onUpdate = (update) => {\r\n    setUpdate(update);\r\n  };\r\n\r\n  const onChange = (values) => {\r\n    setValues(values);\r\n    dispatch(setVolume({ volume: values[0] }));\r\n    dispatch(setDisplayText(\"Master: \" + values[0]));\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-7/8 h-2 my-10\">\r\n      <div style={{ height: 120, width: \"100%\" }}>\r\n        <Slider\r\n          mode={1}\r\n          step={1}\r\n          domain={domain}\r\n          rootStyle={sliderStyle}\r\n          onUpdate={onUpdate}\r\n          onChange={onChange}\r\n          values={values}\r\n        >\r\n          <Rail>\r\n            {({ getRailProps }) => <SliderRail getRailProps={getRailProps} />}\r\n          </Rail>\r\n          <Handles>\r\n            {({ handles, getHandleProps }) => (\r\n              <div className=\"slider-handles\">\r\n                {handles.map((handle) => (\r\n                  <Handle\r\n                    key={handle.id}\r\n                    handle={handle}\r\n                    domain={domain}\r\n                    getHandleProps={getHandleProps}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </Handles>\r\n          <Tracks right={false}>\r\n            {({ tracks, getTrackProps }) => (\r\n              <div className=\"slider-tracks\">\r\n                {tracks.map(({ id, source, target }) => (\r\n                  <Track\r\n                    key={id}\r\n                    source={source}\r\n                    target={target}\r\n                    getTrackProps={getTrackProps}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </Tracks>\r\n        </Slider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fader;\r\n","import React, { useEffect } from \"react\";\r\nimport * as Tone from \"tone\";\r\nimport \"../tailwind.output.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectVolume, setDisplayText } from \"../redux/features/machineSlice\";\r\n\r\nconst Pad = (props) => {\r\n  const dispatch = useDispatch();\r\n  const volume = useSelector((state) => selectVolume(state, props.id[1]));\r\n  const player = props.sample;\r\n  player.volume.value = volume;\r\n\r\n  useEffect((props) => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const play = async () => {\r\n    await Tone.loaded();\r\n    dispatch(setDisplayText(props.id[1]));\r\n    console.log(player);\r\n    player.start();\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === props.id[1]) {\r\n      play();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button onClick={play} className=\"border border-solid border-1 w-16 h-16\">\r\n      {props.id[1]}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Pad;\r\n","import React from \"react\";\r\nimport \"../tailwind.output.css\";\r\n\r\nconst ButtonRound = () => {\r\n  return (\r\n    <div className=\"border border-solid border-1 rounded-full w-2 h-2\"></div>\r\n  );\r\n};\r\n\r\nexport default ButtonRound;\r\n","import b1zSample from \"./samples/Roland TR 909/Bass Drum/bt0a0da.wav\";\r\nimport b1xSample from \"./samples/Roland TR 909/Snare/st0t0s0.wav\";\r\nimport b1cSample from \"./samples/Roland TR 909/Closed Hihat/hhcd0.wav\";\r\nimport b1aSample from \"./samples/Roland TR 909/Hand Clap/handclp1.wav\";\r\nimport b1sSample from \"./samples/Roland TR 909/Low Tom/lt0d0.wav\";\r\nimport b1dSample from \"./samples/Roland TR 909/Open Hihat/hhod0.wav\";\r\nimport b1qSample from \"./samples/Roland TR 909/Crash/cshd0.wav\";\r\nimport b1wSample from \"./samples/Roland TR 909/Mid Tom/mt0d0.wav\";\r\nimport b1eSample from \"./samples/Roland TR 909/Ride/rided0.wav\";\r\n\r\nconst banks = {\r\n  b1: {\r\n    q: b1qSample,\r\n    w: b1wSample,\r\n    e: b1eSample,\r\n    a: b1aSample,\r\n    s: b1sSample,\r\n    d: b1dSample,\r\n    z: b1zSample,\r\n    x: b1xSample,\r\n    c: b1cSample,\r\n  },\r\n  b2: {\r\n    q: \"\",\r\n    w: \"\",\r\n    e: \"\",\r\n    a: \"\",\r\n    s: \"\",\r\n    d: \"\",\r\n    z: \"\",\r\n    x: \"\",\r\n    c: \"\",\r\n  },\r\n  b3: {\r\n    q: \"\",\r\n    w: \"\",\r\n    e: \"\",\r\n    a: \"\",\r\n    s: \"\",\r\n    d: \"\",\r\n    z: \"\",\r\n    x: \"\",\r\n    c: \"\",\r\n  },\r\n  b4: {\r\n    q: \"\",\r\n    w: \"\",\r\n    e: \"\",\r\n    a: \"\",\r\n    s: \"\",\r\n    d: \"\",\r\n    z: \"\",\r\n    x: \"\",\r\n    c: \"\",\r\n  },\r\n};\r\n\r\nexport default banks;\r\n","import React from \"react\";\r\nimport \"../tailwind.output.css\";\r\nimport Knob from \"./Knob\";\r\nimport Display from \"./Display\";\r\nimport Fader from \"./Fader\";\r\nimport Pad from \"./Pad\";\r\nimport ButtonRound from \"./ButtonRound\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport * as Tone from \"tone\";\r\nimport banks from \"../banks\";\r\n\r\nconst DrumMachine = () => {\r\n  const sampleZ = new Tone.Player(banks.b1.z).toDestination();\r\n  const sampleX = new Tone.Player(banks.b1.x).toDestination();\r\n  const sampleC = new Tone.Player(banks.b1.c).toDestination();\r\n  const sampleA = new Tone.Player(banks.b1.a).toDestination();\r\n  const sampleS = new Tone.Player(banks.b1.s).toDestination();\r\n  const sampleD = new Tone.Player(banks.b1.d).toDestination();\r\n  const sampleQ = new Tone.Player(banks.b1.q).toDestination();\r\n  const sampleW = new Tone.Player(banks.b1.w).toDestination();\r\n  const sampleE = new Tone.Player(banks.b1.e).toDestination();\r\n  return (\r\n    <div\r\n      id=\"container\"\r\n      className=\"flex w-screen h-screen justify-center items-center\"\r\n    >\r\n      <div\r\n        id=\"drum-machine\"\r\n        className=\"bg-gray-100 flex flex-col w-full max-w-xl\"\r\n      >\r\n        <div id=\"top\" className=\"flex justify-between px-12 my-8\">\r\n          <div id=\"banks\" className=\"flex justify-evenly w-1/2\">\r\n            {Array(4)\r\n              .fill(4)\r\n              .map((el) => {\r\n                return <ButtonRound key={uuid()} />;\r\n              })}\r\n          </div>\r\n          <ButtonRound id=\"power\" />\r\n        </div>\r\n        <div id=\"main\" className=\"flex justify-around\">\r\n          <div id=\"pads\" className=\"grid grid-cols-3 gap-8 mb-8\">\r\n            <Pad id=\"pq\" sample={sampleQ} key={uuid()} />\r\n            <Pad id=\"pw\" sample={sampleW} key={uuid()} />\r\n            <Pad id=\"pe\" sample={sampleE} key={uuid()} />\r\n            <Pad id=\"pa\" sample={sampleA} key={uuid()} />\r\n            <Pad id=\"ps\" sample={sampleS} key={uuid()} />\r\n            <Pad id=\"pd\" sample={sampleD} key={uuid()} />\r\n            <Pad id=\"pz\" sample={sampleZ} key={uuid()} />\r\n            <Pad id=\"px\" sample={sampleX} key={uuid()} />\r\n            <Pad id=\"pc\" sample={sampleC} key={uuid()} />\r\n          </div>\r\n          <div id=\"controls\" className=\"\">\r\n            <Display />\r\n            <div id=\"knobs\" className=\"grid grid-cols-3 gap-4 mb-6\">\r\n              <Knob id=\"kq\" key={uuid()} />\r\n              <Knob id=\"kw\" key={uuid()} />\r\n              <Knob id=\"ke\" key={uuid()} />\r\n              <Knob id=\"ka\" key={uuid()} />\r\n              <Knob id=\"ks\" key={uuid()} />\r\n              <Knob id=\"kd\" key={uuid()} />\r\n              <Knob id=\"kz\" key={uuid()} />\r\n              <Knob id=\"kx\" key={uuid()} />\r\n              <Knob id=\"kc\" key={uuid()} />\r\n            </div>\r\n            <Fader />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrumMachine;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./tailwind.output.css\";\nimport DrumMachine from \"./components/DrumMachine\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DrumMachine />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport machineReducer from \"./features/machineSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    machine: machineReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/configureStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}