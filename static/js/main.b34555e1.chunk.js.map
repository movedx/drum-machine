{"version":3,"sources":["samples/Roland TR 909/Bass Drum/bt0a0da.wav","samples/Roland TR 909/Snare/st0t0s0.wav","samples/Roland TR 909/Closed Hihat/hhcd0.wav","samples/Roland TR 909/Hand Clap/handclp1.wav","samples/Roland TR 909/Low Tom/lt0d0.wav","samples/Roland TR 909/Open Hihat/hhod0.wav","samples/Roland TR 909/Crash/cshd0.wav","samples/Roland TR 909/Mid Tom/mt0d0.wav","samples/Roland TR 909/Ride/rided0.wav","redux/features/machineSlice.js","components/Knob.js","components/Display.js","components/Fader.js","components/Pad.js","components/ButtonRound.js","banks.js","components/DrumMachine.js","App.js","serviceWorker.js","redux/configureStore.js","index.js"],"names":["module","exports","machineSlice","createSlice","name","initialState","volumeZ","volumeX","volumeC","volumeA","volumeS","volumeD","volumeQ","volumeW","volumeE","bank","power","volume","displayText","reducers","setVolume","state","action","payload","id","charAt","length","toUpperCase","actions","Knob","props","useState","value","setValue","dispatch","useDispatch","className","diameter","min","max","step","theme","donutColor","onValueChange","val","handleChange","ariaLabelledBy","Display","Fader","Pad","useSelector","machine","selectVolume","player","sample","useEffect","window","addEventListener","handleKeyDown","removeEventListener","play","a","Tone","start","event","key","onClick","ButtonRound","banks","b1","q","b1qSample","w","b1wSample","e","b1eSample","b1aSample","s","b1sSample","d","b1dSample","z","b1zSample","x","b1xSample","c","b1cSample","b2","b3","b4","DrumMachine","sampleZ","toDestination","sampleX","sampleC","sampleA","sampleS","sampleD","sampleQ","sampleW","sampleE","Array","fill","map","el","uuid","App","Boolean","location","hostname","match","configureStore","reducer","machineReducer","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b34555e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bt0a0da.aebf1159.wav\";","module.exports = __webpack_public_path__ + \"static/media/st0t0s0.3ce30e88.wav\";","module.exports = __webpack_public_path__ + \"static/media/hhcd0.be306346.wav\";","module.exports = __webpack_public_path__ + \"static/media/handclp1.ce5193f6.wav\";","module.exports = __webpack_public_path__ + \"static/media/lt0d0.92968b71.wav\";","module.exports = __webpack_public_path__ + \"static/media/hhod0.67b2afb3.wav\";","module.exports = __webpack_public_path__ + \"static/media/cshd0.b3074059.wav\";","module.exports = __webpack_public_path__ + \"static/media/mt0d0.e7bd7821.wav\";","module.exports = __webpack_public_path__ + \"static/media/rided0.5e2d1e4b.wav\";","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const machineSlice = createSlice({\r\n  name: \"machine\",\r\n  initialState: {\r\n    volumeZ: 75,\r\n    volumeX: 75,\r\n    volumeC: 75,\r\n    volumeA: 75,\r\n    volumeS: 75,\r\n    volumeD: 75,\r\n    volumeQ: 75,\r\n    volumeW: 75,\r\n    volumeE: 75,\r\n    bank: \"b1\",\r\n    power: 1,\r\n    volume: 75,\r\n    displayText: \"\",\r\n  },\r\n  reducers: {\r\n    setVolume: (state, action) => {\r\n      const { id, volume } = action.payload;\r\n      if (id) {\r\n        state[\"volume\" + id.charAt(id.length - 1).toUpperCase()] = volume;\r\n      } else {\r\n        state.volume = volume;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setVolume } = machineSlice.actions;\r\n\r\nexport const selectVolume = (state, id) =>\r\n  (1 - state.machine[\"volume\" + id.toUpperCase()] / 100) * 80 * -1;\r\n\r\nexport default machineSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { Donut } from \"react-dial-knob\";\r\nimport \"../tailwind.output.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setVolume } from \"../redux/features/machineSlice\";\r\n\r\nconst Knob = (props) => {\r\n  const [value, setValue] = useState(75);\r\n  const dispatch = useDispatch();\r\n  const handleChange = (val) => {\r\n    setValue(val);\r\n    dispatch(setVolume({ id: props.id[1], volume: val }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"border border-solid border-1 rounded-full w-8 h-8\">\r\n      <Donut\r\n        diameter={32}\r\n        min={0}\r\n        max={100}\r\n        step={1}\r\n        value={value}\r\n        theme={{\r\n          donutColor: \"gray\",\r\n        }}\r\n        onValueChange={(val) => handleChange(val)}\r\n        ariaLabelledBy={\"my-label\"}\r\n      ></Donut>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Knob;\r\n","import React from \"react\";\r\nimport \"../tailwind.output.css\";\r\n\r\nconst Display = () => {\r\n  return <div className=\"border border-solid w-7/8 h-8 mb-8\"></div>;\r\n};\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport \"../tailwind.output.css\";\r\n\r\nconst Fader = () => {\r\n  return <div className=\"border border-solid w-7/8 h-2 my-10\"></div>;\r\n};\r\n\r\nexport default Fader;\r\n","import React, { useEffect } from \"react\";\r\nimport * as Tone from \"tone\";\r\nimport \"../tailwind.output.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectVolume } from \"../redux/features/machineSlice\";\r\n\r\nconst Pad = (props) => {\r\n  const volume = useSelector((state) => selectVolume(state, props.id[1]));\r\n  const player = props.sample;\r\n  player.volume.value = volume;\r\n\r\n  useEffect((props) => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const play = async () => {\r\n    await Tone.loaded();\r\n    player.start();\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === props.id[1]) {\r\n      play();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button onClick={play} className=\"border border-solid border-1 w-16 h-16\">\r\n      {props.id[1]}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Pad;\r\n","import React from \"react\";\r\nimport \"../tailwind.output.css\";\r\n\r\nconst ButtonRound = () => {\r\n  return (\r\n    <div className=\"border border-solid border-1 rounded-full w-2 h-2\"></div>\r\n  );\r\n};\r\n\r\nexport default ButtonRound;\r\n","import b1zSample from \"./samples/Roland TR 909/Bass Drum/bt0a0da.wav\";\r\nimport b1xSample from \"./samples/Roland TR 909/Snare/st0t0s0.wav\";\r\nimport b1cSample from \"./samples/Roland TR 909/Closed Hihat/hhcd0.wav\";\r\nimport b1aSample from \"./samples/Roland TR 909/Hand Clap/handclp1.wav\";\r\nimport b1sSample from \"./samples/Roland TR 909/Low Tom/lt0d0.wav\";\r\nimport b1dSample from \"./samples/Roland TR 909/Open Hihat/hhod0.wav\";\r\nimport b1qSample from \"./samples/Roland TR 909/Crash/cshd0.wav\";\r\nimport b1wSample from \"./samples/Roland TR 909/Mid Tom/mt0d0.wav\";\r\nimport b1eSample from \"./samples/Roland TR 909/Ride/rided0.wav\";\r\n\r\nconst banks = {\r\n  b1: {\r\n    q: b1qSample,\r\n    w: b1wSample,\r\n    e: b1eSample,\r\n    a: b1aSample,\r\n    s: b1sSample,\r\n    d: b1dSample,\r\n    z: b1zSample,\r\n    x: b1xSample,\r\n    c: b1cSample,\r\n  },\r\n  b2: {\r\n    q: \"\",\r\n    w: \"\",\r\n    e: \"\",\r\n    a: \"\",\r\n    s: \"\",\r\n    d: \"\",\r\n    z: \"\",\r\n    x: \"\",\r\n    c: \"\",\r\n  },\r\n  b3: {\r\n    q: \"\",\r\n    w: \"\",\r\n    e: \"\",\r\n    a: \"\",\r\n    s: \"\",\r\n    d: \"\",\r\n    z: \"\",\r\n    x: \"\",\r\n    c: \"\",\r\n  },\r\n  b4: {\r\n    q: \"\",\r\n    w: \"\",\r\n    e: \"\",\r\n    a: \"\",\r\n    s: \"\",\r\n    d: \"\",\r\n    z: \"\",\r\n    x: \"\",\r\n    c: \"\",\r\n  },\r\n};\r\n\r\nexport default banks;\r\n","import React from \"react\";\r\nimport \"../tailwind.output.css\";\r\nimport Knob from \"./Knob\";\r\nimport Display from \"./Display\";\r\nimport Fader from \"./Fader\";\r\nimport Pad from \"./Pad\";\r\nimport ButtonRound from \"./ButtonRound\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport * as Tone from \"tone\";\r\nimport banks from \"../banks\";\r\n\r\nconst DrumMachine = () => {\r\n  const sampleZ = new Tone.Player(banks.b1.z).toDestination();\r\n  const sampleX = new Tone.Player(banks.b1.x).toDestination();\r\n  const sampleC = new Tone.Player(banks.b1.c).toDestination();\r\n  const sampleA = new Tone.Player(banks.b1.a).toDestination();\r\n  const sampleS = new Tone.Player(banks.b1.s).toDestination();\r\n  const sampleD = new Tone.Player(banks.b1.d).toDestination();\r\n  const sampleQ = new Tone.Player(banks.b1.q).toDestination();\r\n  const sampleW = new Tone.Player(banks.b1.w).toDestination();\r\n  const sampleE = new Tone.Player(banks.b1.e).toDestination();\r\n  return (\r\n    <div\r\n      id=\"container\"\r\n      className=\"flex w-screen h-screen justify-center items-center\"\r\n    >\r\n      <div\r\n        id=\"drum-machine\"\r\n        className=\"bg-gray-100 flex flex-col w-full max-w-xl\"\r\n      >\r\n        <div id=\"top\" className=\"flex justify-between px-12 my-8\">\r\n          <div id=\"banks\" className=\"flex justify-evenly w-1/2\">\r\n            {Array(4)\r\n              .fill(4)\r\n              .map((el) => {\r\n                return <ButtonRound key={uuid()} />;\r\n              })}\r\n          </div>\r\n          <ButtonRound id=\"power\" />\r\n        </div>\r\n        <div id=\"main\" className=\"flex justify-around\">\r\n          <div id=\"pads\" className=\"grid grid-cols-3 gap-8 mb-8\">\r\n            <Pad id=\"pq\" sample={sampleQ} key={uuid()} />\r\n            <Pad id=\"pw\" sample={sampleW} key={uuid()} />\r\n            <Pad id=\"pe\" sample={sampleE} key={uuid()} />\r\n            <Pad id=\"pa\" sample={sampleA} key={uuid()} />\r\n            <Pad id=\"ps\" sample={sampleS} key={uuid()} />\r\n            <Pad id=\"pd\" sample={sampleD} key={uuid()} />\r\n            <Pad id=\"pz\" sample={sampleZ} key={uuid()} />\r\n            <Pad id=\"px\" sample={sampleX} key={uuid()} />\r\n            <Pad id=\"pc\" sample={sampleC} key={uuid()} />\r\n          </div>\r\n          <div id=\"controls\" className=\"\">\r\n            <Display />\r\n            <div id=\"knobs\" className=\"grid grid-cols-3 gap-4 mb-6\">\r\n              <Knob id=\"kq\" key={uuid()} />\r\n              <Knob id=\"kw\" key={uuid()} />\r\n              <Knob id=\"ke\" key={uuid()} />\r\n              <Knob id=\"ka\" key={uuid()} />\r\n              <Knob id=\"ks\" key={uuid()} />\r\n              <Knob id=\"kd\" key={uuid()} />\r\n              <Knob id=\"kz\" key={uuid()} />\r\n              <Knob id=\"kx\" key={uuid()} />\r\n              <Knob id=\"kc\" key={uuid()} />\r\n            </div>\r\n            <Fader />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrumMachine;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./tailwind.output.css\";\nimport DrumMachine from \"./components/DrumMachine\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DrumMachine />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport machineReducer from \"./features/machineSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    machine: machineReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/configureStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}